<svg viewBox="0 0 1200 800" xmlns="http://www.w3.org/2000/svg">
  <!-- Background -->
  <defs>
    <linearGradient id="bgGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#f8fafc;stop-opacity:1" />
      <stop offset="100%" style="stop-color:#e2e8f0;stop-opacity:1" />
    </linearGradient>
    
    <!-- Component gradients -->
    <linearGradient id="clientGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#3b82f6;stop-opacity:0.9" />
      <stop offset="100%" style="stop-color:#1d4ed8;stop-opacity:0.9" />
    </linearGradient>
    
    <linearGradient id="serverGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#10b981;stop-opacity:0.9" />
      <stop offset="100%" style="stop-color:#047857;stop-opacity:0.9" />
    </linearGradient>
    
    <linearGradient id="dbGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#f59e0b;stop-opacity:0.9" />
      <stop offset="100%" style="stop-color:#d97706;stop-opacity:0.9" />
    </linearGradient>
    
    <linearGradient id="aiGradient" x1="0%" y1="0%" x2="100%" y2="100%">
      <stop offset="0%" style="stop-color:#8b5cf6;stop-opacity:0.9" />
      <stop offset="100%" style="stop-color:#7c3aed;stop-opacity:0.9" />
    </linearGradient>
    
    <!-- Arrow marker -->
    <marker id="arrowhead" markerWidth="10" markerHeight="7" 
     refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" fill="#374151" />
    </marker>
    
    <!-- Drop shadow filter -->
    <filter id="dropshadow" x="-20%" y="-20%" width="140%" height="140%">
      <feDropShadow dx="2" dy="4" stdDeviation="3" flood-color="#000000" flood-opacity="0.15"/>
    </filter>
  </defs>
  
  <rect width="1200" height="800" fill="url(#bgGradient)"/>
  
  <!-- Title -->
  <text x="600" y="40" text-anchor="middle" font-family="Arial, sans-serif" font-size="28" font-weight="bold" fill="#1f2937">
    TaskMate AI-Powered Productivity App Architecture
  </text>
  
  <!-- Client Layer -->
  <g filter="url(#dropshadow)">
    <rect x="50" y="100" width="280" height="200" rx="12" fill="url(#clientGradient)" stroke="#1e40af" stroke-width="2"/>
    <text x="190" y="130" text-anchor="middle" font-family="Arial, sans-serif" font-size="18" font-weight="bold" fill="white">
      React Client
    </text>
    <text x="190" y="150" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="#dbeafe">
      (Frontend Layer)
    </text>
    
    <!-- Client Technologies -->
    <rect x="70" y="170" width="240" height="110" rx="6" fill="rgba(255,255,255,0.1)" stroke="rgba(255,255,255,0.2)"/>
    <text x="80" y="190" font-family="Arial, sans-serif" font-size="11" fill="white" font-weight="bold">Technologies:</text>
    <text x="80" y="205" font-family="Arial, sans-serif" font-size="10" fill="#e0f2fe">• Vite (Build Tool)</text>
    <text x="80" y="220" font-family="Arial, sans-serif" font-size="10" fill="#e0f2fe">• Zustand (State Management)</text>
    <text x="80" y="235" font-family="Arial, sans-serif" font-size="10" fill="#e0f2fe">• Tailwind CSS + DaisyUI</text>
    <text x="80" y="250" font-family="Arial, sans-serif" font-size="10" fill="#e0f2fe">• Axios (HTTP Client)</text>
    <text x="80" y="265" font-family="Arial, sans-serif" font-size="10" fill="#e0f2fe">• Socket.io Client</text>
  </g>
  
  <!-- Server Layer -->
  <g filter="url(#dropshadow)">
    <rect x="460" y="100" width="280" height="200" rx="12" fill="url(#serverGradient)" stroke="#047857" stroke-width="2"/>
    <text x="600" y="130" text-anchor="middle" font-family="Arial, sans-serif" font-size="18" font-weight="bold" fill="white">
      Express Server
    </text>
    <text x="600" y="150" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="#d1fae5">
      (Backend Layer)
    </text>
    
    <!-- Server Technologies -->
    <rect x="480" y="170" width="240" height="110" rx="6" fill="rgba(255,255,255,0.1)" stroke="rgba(255,255,255,0.2)"/>
    <text x="490" y="190" font-family="Arial, sans-serif" font-size="11" fill="white" font-weight="bold">Technologies:</text>
    <text x="490" y="205" font-family="Arial, sans-serif" font-size="10" fill="#d1fae5">• Node.js Runtime</text>
    <text x="490" y="220" font-family="Arial, sans-serif" font-size="10" fill="#d1fae5">• Socket.io Server</text>
    <text x="490" y="235" font-family="Arial, sans-serif" font-size="10" fill="#d1fae5">• JWT Authentication</text>
    <text x="490" y="250" font-family="Arial, sans-serif" font-size="10" fill="#d1fae5">• REST API Endpoints</text>
    <text x="490" y="265" font-family="Arial, sans-serif" font-size="10" fill="#d1fae5">• Mongoose ODM</text>
  </g>
  
  <!-- Database Layer -->
  <g filter="url(#dropshadow)">
    <rect x="870" y="100" width="280" height="200" rx="12" fill="url(#dbGradient)" stroke="#d97706" stroke-width="2"/>
    <text x="1010" y="130" text-anchor="middle" font-family="Arial, sans-serif" font-size="18" font-weight="bold" fill="white">
      MongoDB
    </text>
    <text x="1010" y="150" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="#fef3c7">
      (Database Layer)
    </text>
    
    <!-- Database Collections -->
    <rect x="890" y="170" width="240" height="110" rx="6" fill="rgba(255,255,255,0.1)" stroke="rgba(255,255,255,0.2)"/>
    <text x="900" y="190" font-family="Arial, sans-serif" font-size="11" fill="white" font-weight="bold">Collections:</text>
    <text x="900" y="210" font-family="Arial, sans-serif" font-size="10" fill="#fef3c7">📊 users</text>
    <text x="920" y="225" font-family="Arial, sans-serif" font-size="9" fill="#fed7aa">username, email, password</text>
    <text x="900" y="245" font-family="Arial, sans-serif" font-size="10" fill="#fef3c7">📋 tasks</text>
    <text x="920" y="260" font-family="Arial, sans-serif" font-size="9" fill="#fed7aa">title, description, completed,</text>
    <text x="920" y="275" font-family="Arial, sans-serif" font-size="9" fill="#fed7aa">priority, dueDate, userId</text>
  </g>
  
  <!-- AI Assistant Layer -->
  <g filter="url(#dropshadow)">
    <rect x="460" y="400" width="280" height="150" rx="12" fill="url(#aiGradient)" stroke="#7c3aed" stroke-width="2"/>
    <text x="600" y="430" text-anchor="middle" font-family="Arial, sans-serif" font-size="18" font-weight="bold" fill="white">
      AI Assistant
    </text>
    <text x="600" y="450" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="#ede9fe">
      (AI Processing Layer)
    </text>
    
    <!-- AI Technologies -->
    <rect x="480" y="470" width="240" height="65" rx="6" fill="rgba(255,255,255,0.1)" stroke="rgba(255,255,255,0.2)"/>
    <text x="490" y="490" font-family="Arial, sans-serif" font-size="11" fill="white" font-weight="bold">Technologies:</text>
    <text x="490" y="505" font-family="Arial, sans-serif" font-size="10" fill="#ede9fe">• LangChain Framework</text>
    <text x="490" y="520" font-family="Arial, sans-serif" font-size="10" fill="#ede9fe">• Groq LLM API</text>
  </g>
  
  <!-- Real-time Updates Box -->
  <g filter="url(#dropshadow)">
    <rect x="50" y="400" width="280" height="150" rx="12" fill="#dc2626" stroke="#b91c1c" stroke-width="2"/>
    <text x="190" y="430" text-anchor="middle" font-family="Arial, sans-serif" font-size="18" font-weight="bold" fill="white">
      Real-Time Updates
    </text>
    <text x="190" y="450" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="#fecaca">
      (WebSocket Layer)
    </text>
    
    <!-- Real-time Events -->
    <rect x="70" y="470" width="240" height="65" rx="6" fill="rgba(255,255,255,0.1)" stroke="rgba(255,255,255,0.2)"/>
    <text x="80" y="490" font-family="Arial, sans-serif" font-size="11" fill="white" font-weight="bold">Socket Events:</text>
    <text x="80" y="505" font-family="Arial, sans-serif" font-size="9" fill="#fecaca">task-created, task-updated,</text>
    <text x="80" y="520" font-family="Arial, sans-serif" font-size="9" fill="#fecaca">task-deleted, task-toggled</text>
  </g>
  
  <!-- API Endpoints Box -->
  <g filter="url(#dropshadow)">
    <rect x="870" y="400" width="280" height="150" rx="12" fill="#6366f1" stroke="#4f46e5" stroke-width="2"/>
    <text x="1010" y="430" text-anchor="middle" font-family="Arial, sans-serif" font-size="18" font-weight="bold" fill="white">
      API Endpoints
    </text>
    <text x="1010" y="450" text-anchor="middle" font-family="Arial, sans-serif" font-size="12" fill="#c7d2fe">
      (REST Routes)
    </text>
    
    <!-- API Routes -->
    <rect x="890" y="470" width="240" height="65" rx="6" fill="rgba(255,255,255,0.1)" stroke="rgba(255,255,255,0.2)"/>
    <text x="900" y="490" font-family="Arial, sans-serif" font-size="11" fill="white" font-weight="bold">Routes:</text>
    <text x="900" y="505" font-family="Arial, sans-serif" font-size="10" fill="#c7d2fe">/api/auth • /api/tasks</text>
    <text x="900" y="520" font-family="Arial, sans-serif" font-size="10" fill="#c7d2fe">/api/ai • /api/ai/breakdown</text>
  </g>
  
  <!-- Connection Lines -->
  <!-- Client to Server HTTP -->
  <line x1="330" y1="180" x2="460" y2="180" stroke="#374151" stroke-width="3" marker-end="url(#arrowhead)"/>
  <text x="395" y="175" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#374151" font-weight="bold">HTTP REST</text>
  
  <!-- Server to Database -->
  <line x1="740" y1="200" x2="870" y2="200" stroke="#374151" stroke-width="3" marker-end="url(#arrowhead)"/>
  <text x="805" y="195" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#374151" font-weight="bold">DB Queries</text>
  
  <!-- Client to Real-time (WebSocket) -->
  <line x1="190" y1="300" x2="190" y2="400" stroke="#dc2626" stroke-width="3" marker-end="url(#arrowhead)"/>
  <text x="140" y="350" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#dc2626" font-weight="bold" transform="rotate(-90 140 350)">WebSocket</text>
  
  <!-- Real-time to Server -->
  <line x1="330" y1="475" x2="460" y2="300" stroke="#dc2626" stroke-width="3" marker-end="url(#arrowhead)"/>
  <text x="370" y="380" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#dc2626" font-weight="bold" transform="rotate(-35 370 380)">Socket.io</text>
  
  <!-- Server to AI -->
  <line x1="600" y1="300" x2="600" y2="400" stroke="#8b5cf6" stroke-width="3" marker-end="url(#arrowhead)"/>
  <text x="550" y="350" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#8b5cf6" font-weight="bold" transform="rotate(-90 550 350)">AI API</text>
  
  <!-- Server to API Endpoints -->
  <line x1="740" y1="300" x2="870" y2="475" stroke="#6366f1" stroke-width="3" marker-end="url(#arrowhead)"/>
  <text x="830" y="380" text-anchor="middle" font-family="Arial, sans-serif" font-size="11" fill="#6366f1" font-weight="bold" transform="rotate(35 830 380)">Routes</text>
  
  <!-- Data Flow Legends -->
  <rect x="50" y="600" width="1100" height="180" rx="8" fill="rgba(255,255,255,0.9)" stroke="#d1d5db" stroke-width="1"/>
  <text x="600" y="625" text-anchor="middle" font-family="Arial, sans-serif" font-size="16" font-weight="bold" fill="#1f2937">
    Data Flow Examples
  </text>
  
  <!-- Task Creation Flow -->
  <text x="70" y="650" font-family="Arial, sans-serif" font-size="14" fill="#1f2937" font-weight="bold">
    1. Task Creation Flow:
  </text>
  <text x="80" y="670" font-family="Arial, sans-serif" font-size="12" fill="#4b5563">
    User → React Client → POST /api/tasks → Express Server → MongoDB
  </text>
  <text x="80" y="685" font-family="Arial, sans-serif" font-size="12" fill="#4b5563">
    ← Socket.io 'task-created' event ← Express Server
  </text>
  <text x="80" y="700" font-family="Arial, sans-serif" font-size="12" fill="#4b5563">
    React Client updates UI in real-time
  </text>
  
  <!-- AI Task Breakdown Flow -->
  <text x="70" y="730" font-family="Arial, sans-serif" font-size="14" fill="#1f2937" font-weight="bold">
    2. AI Task Breakdown Flow:
  </text>
  <text x="80" y="750" font-family="Arial, sans-serif" font-size="12" fill="#4b5563">
    User → React Client → POST /api/ai/breakdown-task → Express Server → LangChain+Groq
  </text>
  <text x="80" y="765" font-family="Arial, sans-serif" font-size="12" fill="#4b5563">
    ← AI Response ← Express Server ← React Client displays subtasks
  </text>
  
  <!-- Technology Stack Summary -->
  <rect x="600" y="640" width="520" height="125" rx="6" fill="rgba(248,250,252,0.8)" stroke="#e2e8f0"/>
  <text x="620" y="660" font-family="Arial, sans-serif" font-size="14" fill="#1f2937" font-weight="bold">
    Complete Technology Stack:
  </text>
  <text x="630" y="680" font-family="Arial, sans-serif" font-size="11" fill="#4b5563">
    <tspan font-weight="bold">Frontend:</tspan> React, Vite, Zustand, Tailwind CSS, DaisyUI, Axios
  </text>
  <text x="630" y="695" font-family="Arial, sans-serif" font-size="11" fill="#4b5563">
    <tspan font-weight="bold">Backend:</tspan> Node.js, Express, Socket.io, JWT, Mongoose
  </text>
  <text x="630" y="710" font-family="Arial, sans-serif" font-size="11" fill="#4b5563">
    <tspan font-weight="bold">Database:</tspan> MongoDB (Users, Tasks collections)
  </text>
  <text x="630" y="725" font-family="Arial, sans-serif" font-size="11" fill="#4b5563">
    <tspan font-weight="bold">AI:</tspan> LangChain Framework, Groq LLM API
  </text>
  <text x="630" y="740" font-family="Arial, sans-serif" font-size="11" fill="#4b5563">
    <tspan font-weight="bold">Real-time:</tspan> WebSocket connections via Socket.io
  </text>
  <text x="630" y="755" font-family="Arial, sans-serif" font-size="11" fill="#4b5563">
    <tspan font-weight="bold">Authentication:</tspan> JWT tokens for secure API access
  </text>
</svg>